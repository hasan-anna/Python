#Scrabble 
#In this project, I will process some data from a group of friends playing scrabble. I will use dictionaries to organize players, words, and points.

letters = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
points = [1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 5, 1, 3, 4, 1, 3, 10, 1, 1, 1, 1, 4, 4, 8, 4, 10]

#make your list 'letter' able to handle lowercase inputs as well
letters += [letter.lower() for letter in letters] 

#double the list 'points' so that the lower case letters also have a score 
points *= 2
#print(letters)
#print(points)

#list comprehension for dictionary
letter_to_points = {key:value for key, value in zip(letters, points)}
#print(letter_to_points)

#add space to list 'letter_to_points' with 0 score
letter_to_points [" "] = 0
#print(letter_to_points)

#create a function that will take in a word and return how many points that word is worth.
def score_word(word):
    point_total = 0 
    for letters in word:
        point_total += letter_to_points.get(letters, 0)  
    return (point_total)

brownie_points = score_word("BROWNIE")
#print(brownie_points)

player_to_words ={'player1': ['BLUE', 'TENNIS', 'EXIT'],'wordNerd':['EARTH', 'EYES', 'MACHINE'], 'Lexi Con':['ERASER', 'BELLY', 'HUSKY'], 'Prof Reader':['ZAP', 'COMA', 'PERIOD']}
#print(player_to_words)

#use previous function call (that calculates the points for every word) to add the total score of every word to the respective player in the player_to_points dictionary
player_to_points = {}
for player, words in player_to_words.items():
    player_points = 0
    for word in words:
        player_points += score_word(word)
        player_to_points[player] = player_points
#print(player_to_points)

#add the word to the player in the list player_to_words
#make a function definition 
def play_word(player, word):
    player_to_words[player].append(word)
    
play_word('player1', 'Anna')    
#print(player_to_words)     

#change the key in dictionary 'letter_to_points_lower' to lowercase 
letter_to_points_lower =  {key.lower():value for key, value in zip(letters, points)}
#print(letter_to_points_lower)
